(function() {var implementors = {};
implementors["fluence_client"] = [{"text":"impl Freeze for Transport","synthetic":true,"types":[]},{"text":"impl Freeze for Client","synthetic":true,"types":[]},{"text":"impl Freeze for ClientCommand","synthetic":true,"types":[]},{"text":"impl Freeze for ClientEvent","synthetic":true,"types":[]}];
implementors["fluence_libp2p"] = [{"text":"impl Freeze for RandomPeerId","synthetic":true,"types":[]}];
implementors["host_closure"] = [{"text":"impl Freeze for Args","synthetic":true,"types":[]},{"text":"impl Freeze for ArgsError","synthetic":true,"types":[]}];
implementors["particle_actors"] = [{"text":"impl Freeze for VmPoolConfig","synthetic":true,"types":[]},{"text":"impl Freeze for PlumberEvent","synthetic":true,"types":[]},{"text":"impl Freeze for Plumber","synthetic":true,"types":[]}];
implementors["particle_behaviour"] = [{"text":"impl Freeze for ParticleBehaviour","synthetic":true,"types":[]},{"text":"impl Freeze for ParticleConfig","synthetic":true,"types":[]}];
implementors["particle_closures"] = [{"text":"impl Freeze for BehaviourMailboxApi","synthetic":true,"types":[]},{"text":"impl Freeze for HostClosures","synthetic":true,"types":[]},{"text":"impl !Freeze for BuiltinCommand","synthetic":true,"types":[]},{"text":"impl Freeze for Mailbox","synthetic":true,"types":[]}];
implementors["particle_dht"] = [{"text":"impl !Freeze for DHTEvent","synthetic":true,"types":[]},{"text":"impl Freeze for ParticleDHT","synthetic":true,"types":[]},{"text":"impl Freeze for DHTConfig","synthetic":true,"types":[]},{"text":"impl !Freeze for ResolveError","synthetic":true,"types":[]},{"text":"impl Freeze for ResolveErrorKind","synthetic":true,"types":[]},{"text":"impl Freeze for NeighborhoodError","synthetic":true,"types":[]}];
implementors["particle_modules"] = [{"text":"impl Freeze for Blueprint","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleError","synthetic":true,"types":[]}];
implementors["particle_protocol"] = [{"text":"impl Freeze for ProtocolMessage","synthetic":true,"types":[]},{"text":"impl Freeze for ProtocolConfig","synthetic":true,"types":[]},{"text":"impl Freeze for Particle","synthetic":true,"types":[]}];
implementors["particle_providers"] = [{"text":"impl Freeze for Provider","synthetic":true,"types":[]},{"text":"impl Freeze for ProviderRepository","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ProviderError&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["particle_server"] = [{"text":"impl !Freeze for Server","synthetic":true,"types":[]},{"text":"impl Freeze for ServerBehaviour","synthetic":true,"types":[]}];
implementors["particle_services"] = [{"text":"impl Freeze for ParticleAppServices","synthetic":true,"types":[]},{"text":"impl Freeze for ServicesConfig","synthetic":true,"types":[]}];
implementors["server_config"] = [{"text":"impl Freeze for AppServicesConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BehaviourConfig&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for BootstrapConfig","synthetic":true,"types":[]},{"text":"impl Freeze for FluenceConfig","synthetic":true,"types":[]},{"text":"impl Freeze for ServerConfig","synthetic":true,"types":[]},{"text":"impl Freeze for KademliaConfig","synthetic":true,"types":[]}];
implementors["test_utils"] = [{"text":"impl Freeze for ConnectedClient","synthetic":true,"types":[]},{"text":"impl Freeze for Instruction","synthetic":true,"types":[]},{"text":"impl Freeze for CreatedSwarm","synthetic":true,"types":[]},{"text":"impl Freeze for Trust","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SwarmConfig&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for CreatedService","synthetic":true,"types":[]}];
implementors["trust_graph"] = [{"text":"impl Freeze for Certificate","synthetic":true,"types":[]},{"text":"impl Freeze for KeyPair","synthetic":true,"types":[]},{"text":"impl Freeze for PublicKeyHashable","synthetic":true,"types":[]},{"text":"impl Freeze for Trust","synthetic":true,"types":[]},{"text":"impl Freeze for TrustGraph","synthetic":true,"types":[]}];
implementors["waiting_queues"] = [{"text":"impl Freeze for Enqueued","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for WaitingQueues&lt;K, V&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()