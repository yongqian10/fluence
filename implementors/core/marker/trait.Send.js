(function() {var implementors = {};
implementors["fluence_client"] = [{"text":"impl Send for Transport","synthetic":true,"types":[]},{"text":"impl Send for Client","synthetic":true,"types":[]},{"text":"impl Send for ClientCommand","synthetic":true,"types":[]},{"text":"impl Send for ClientEvent","synthetic":true,"types":[]}];
implementors["fluence_libp2p"] = [{"text":"impl Send for RandomPeerId","synthetic":true,"types":[]}];
implementors["host_closure"] = [{"text":"impl Send for Args","synthetic":true,"types":[]},{"text":"impl Send for ArgsError","synthetic":true,"types":[]}];
implementors["particle_actors"] = [{"text":"impl Send for VmPoolConfig","synthetic":true,"types":[]},{"text":"impl Send for PlumberEvent","synthetic":true,"types":[]},{"text":"impl Send for Plumber","synthetic":true,"types":[]}];
implementors["particle_behaviour"] = [{"text":"impl Send for ParticleBehaviour","synthetic":true,"types":[]},{"text":"impl Send for ParticleConfig","synthetic":true,"types":[]}];
implementors["particle_closures"] = [{"text":"impl Send for BehaviourMailboxApi","synthetic":true,"types":[]},{"text":"impl Send for HostClosures","synthetic":true,"types":[]},{"text":"impl Send for BuiltinCommand","synthetic":true,"types":[]},{"text":"impl Send for Mailbox","synthetic":true,"types":[]}];
implementors["particle_dht"] = [{"text":"impl Send for DHTEvent","synthetic":true,"types":[]},{"text":"impl Send for ParticleDHT","synthetic":true,"types":[]},{"text":"impl Send for DHTConfig","synthetic":true,"types":[]},{"text":"impl Send for ResolveError","synthetic":true,"types":[]},{"text":"impl Send for ResolveErrorKind","synthetic":true,"types":[]},{"text":"impl Send for NeighborhoodError","synthetic":true,"types":[]}];
implementors["particle_modules"] = [{"text":"impl Send for Blueprint","synthetic":true,"types":[]},{"text":"impl Send for ModuleError","synthetic":true,"types":[]}];
implementors["particle_protocol"] = [{"text":"impl Send for ProtocolMessage","synthetic":true,"types":[]},{"text":"impl Send for ProtocolConfig","synthetic":true,"types":[]},{"text":"impl Send for Particle","synthetic":true,"types":[]}];
implementors["particle_providers"] = [{"text":"impl Send for Provider","synthetic":true,"types":[]},{"text":"impl Send for ProviderRepository","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ProviderError&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["particle_server"] = [{"text":"impl Send for Server","synthetic":true,"types":[]},{"text":"impl Send for ServerBehaviour","synthetic":true,"types":[]}];
implementors["particle_services"] = [{"text":"impl Send for ParticleAppServices","synthetic":true,"types":[]},{"text":"impl Send for ServicesConfig","synthetic":true,"types":[]}];
implementors["server_config"] = [{"text":"impl Send for AppServicesConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BehaviourConfig&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for BootstrapConfig","synthetic":true,"types":[]},{"text":"impl Send for FluenceConfig","synthetic":true,"types":[]},{"text":"impl Send for ServerConfig","synthetic":true,"types":[]},{"text":"impl Send for KademliaConfig","synthetic":true,"types":[]}];
implementors["test_utils"] = [{"text":"impl Send for ConnectedClient","synthetic":true,"types":[]},{"text":"impl Send for Instruction","synthetic":true,"types":[]},{"text":"impl Send for CreatedSwarm","synthetic":true,"types":[]},{"text":"impl Send for Trust","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SwarmConfig&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for CreatedService","synthetic":true,"types":[]}];
implementors["trust_graph"] = [{"text":"impl Send for Certificate","synthetic":true,"types":[]},{"text":"impl Send for KeyPair","synthetic":true,"types":[]},{"text":"impl Send for PublicKeyHashable","synthetic":true,"types":[]},{"text":"impl Send for Trust","synthetic":true,"types":[]},{"text":"impl Send for TrustGraph","synthetic":true,"types":[]}];
implementors["waiting_queues"] = [{"text":"impl Send for Enqueued","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Send for WaitingQueues&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()